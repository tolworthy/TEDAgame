function map(which){// called by index.html OR label created by 'showMapLabels'
    let a={"toMouse":0, "oldZoom":nav.worldMapZoom,
            "mouseXpx":0, "mouseYpx":0
    };
    function turnOnMapContainer(){
          nav.mapStatus=which;
          O("mapContainer").style.display ="inline";
          O("map-up").style.display = "inline"; // in case world-map turned them off
          O("map-down").style.display = "inline";
          O("map-left").style.display = "inline";
          O("map-right").style.display = "inline";
          clock.gamePaused =1;
    }
    function showMapLabels(){
        let b={"asterisk":"", "nameToShow":"",
                "newLabel":"", "allLabels":"",
                "n":0,
                "scaledX":"","scaledY":"",
                "inner":""
        }
        function getInnerStyle(){// might need extra DIV for positioning
            let c={"left":"","right":"","top":""};
            c.left ="17px"; c.right =""; c.top ="3px"; // set defaults: see if they change
            b.inner = b.asterisk +b.nameToShow;
            if(db.mapLocations[b.n].hasOwnProperty("notes")){ // labelAbove, labelbelow, etc.
                if(db.mapLocations[b.n].notes.includes("labelBelow")){ c.left ="-10px"; c.top ="16px";}
                else if(db.mapLocations[b.n].notes.includes("labelAbove")){ c.left ="-30px"; c.top ="-12px";}
                else if(db.mapLocations[b.n].notes.includes("labelLeft")){c.right ="14px"; c.top="5px";}
                else if(db.mapLocations[b.n].notes.includes("labelAboveLeft")){c.right ="12px"; c.top="-10px";}
                else if(db.mapLocations[b.n].notes.includes("labelBelowLeft")){c.right ="12px"; c.top="15px";}
                else if(db.mapLocations[b.n].notes.includes("labelAboveRight")){c.left ="7px"; c.top="-10px";}
                else if(db.mapLocations[b.n].notes.includes("labelBelowRight")){c.left ="7px"; c.top="15px";}
            }
            if(c.right =="")// normal: asterisk on LEFT
                b.inner = b.asterisk + "<div style='position:absolute; left:" +c.left+ ";top:" +c.top+ ";'>" +b.nameToShow+ "</div>";
            else b.inner = "<div style='position:absolute; align:right; text-align:right; right:" +c.right+ ";top:" +c.top+ ";'>" +b.nameToShow+ "</div>" +b.asterisk;

        }
        b.asterisk ="<div style='font-size:200%; position:absolute; top:12px;'>*</div>";
        for(b.n =2; b.n < db.mapLocations.length; b.n++){
            b.nameToShow =db.mapLocations[b.n].name;
            b.scaledX = Math.floor(db.mapLocations[b.n].xPx *nav.worldMapZoom);
            b.scaledY = Math.floor(db.mapLocations[b.n].yPx *nav.worldMapZoom) -8;
            getInnerStyle();
            b.newLabel ="<div class=\"mapLabel\" style=\"left:"+b.scaledX+ "px; top:"+b.scaledY+ "px;\" onclick=\"javascript:map('"+b.n+"')\">" +b.inner+"</div> ";
            b.allLabels +=b.newLabel;
        }
        O("mapLabels").innerHTML =b.allLabels;
    }
    function resizeWorldMap(howMuch){
        nav.worldMapZoom *=howMuch;
        if(nav.worldMapZoom >nav.maxMapZoom)nav.worldMapZoom =nav.maxMapZoom;
        else if(nav.worldMapZoom <nav.minMapZoom)nav.worldMapZoom =nav.minMapZoom;
        O("worldMap").style.width =   Math.floor(nav.worldMapGifWidth * nav.worldMapZoom) + "px";// automatically changes the rest
        O("worldMap").style.height =   Math.floor(nav.worldMapGifHeight * nav.worldMapZoom) + "px";// automatically changes the rest
        O("map-zoomin").style.display = (nav.worldMapZoom <nav.maxMapZoom) ? "inline" : "none";
        O("map-zoomout").style.display =(nav.worldMapZoom >nav.minMapZoom) ? "inline" : "none";
        repositionWorldMap();
        showMapLabels();
    }
    function getmapXY(){
        let b={ "xFromMiddle":0, "yFromMiddle":0, "xMove":0, "yMove":0}; // how much to move
        // where did you click?
        a.mouseXpx =(mouse.Xpercent/100) * gameSize.width; // e.g. clicked 60% across? That's 0.6 x game width
        a.mouseYpx =(mouse.Ypercent/100) * gameSize.height;
        if(a.toMouse ==1){ // new click will be centered?
        // how far from the middle?
            b.xFromMiddle = a.mouseXpx -(0.5 * gameSize.width); // e.g. 0.1 x game width
            b.yFromMiddle = a.mouseYpx -(0.5 * gameSize.height);
            // how far is that in map pixels?
            b.xMove = b.xFromMiddle / a.oldZoom; // e.g. clicked 200 away? But zoomed in by 10? That's 20 map pixels
            b.yMove = b.yFromMiddle / a.oldZoom;
            nav.mapPixelYouWant.x =nav.mapPixelYouWant.x + b.xMove;
            nav.mapPixelYouWant.y =nav.mapPixelYouWant.y + b.yMove;
        }else{// map won't change, just work out new position on map
            nav.mapPixelYouWant.x = Math.floor((nav.mapOffsetScaled.x + a.mouseXpx)/a.oldZoom);
            nav.mapPixelYouWant.y = Math.floor((nav.mapOffsetScaled.y + a.mouseYpx)/a.oldZoom);
        }// l("mapPixel: " +Math.floor(nav.mapPixelYouWant.x)+ "," +Math.floor(nav.mapPixelYouWant.y) );
    }
    function repositionWorldMap(){ // scene: 80m (8m inside). Pixel =8km=100 scenes. 25 per local map. Scroll 4 screens per pixel.
        // user clicked?
        let b={ "scaledPixelYouWantX":0, "scaledPixelYouWantY":0, // find top left corner
                "minX":0, "maxX":0, "minY":0, "maxY":0, // don't go off the map
                "scaledMapFullWidth":0, "scaledMapFullHeight":0, // narrower than the screen?
                "el":"", "markerRelativeToGifBackX":0, "markerRelativeToGifBackY":0 // to update map marker
        };
        if(a.toMouse ==1)getmapXY();

        // find top left corner
        b.scaledPixelYouWantX = nav.mapPixelYouWant.x *nav.worldMapZoom; // on the giant scaled map
        nav.mapOffsetScaled.x = b.scaledPixelYouWantX - (gameSize.width/2); // everything else is off the screen
        b.scaledPixelYouWantY = nav.mapPixelYouWant.y *nav.worldMapZoom;
        nav.mapOffsetScaled.y = b.scaledPixelYouWantY - (gameSize.height/2);

        // don't go off the map
        b.minX = Math.floor((gameSize.width/2)/nav.worldMapZoom);// how far can you go to the edge?
        b.maxX = Math.floor(nav.worldMapGifWidth - ((gameSize.width/2)/nav.worldMapZoom));
        b.minY = Math.floor((gameSize.height/2)/nav.worldMapZoom);
        b.maxY = Math.floor(nav.worldMapGifHeight -((gameSize.height/2)/nav.worldMapZoom));
        if(nav.mapPixelYouWant.x <=b.minX){
                nav.mapOffsetScaled.x =0;
                nav.mapPixelYouWant.x = b.minX;
                O("map-left").style.display = "none";
        }else O("map-left").style.display = "inline";
        if(nav.mapPixelYouWant.y <=b.minY){
                nav.mapOffsetScaled.y =0;
                nav.mapPixelYouWant.y = b.minY;
                O("map-up").style.display = "none";
        }else O("map-up").style.display = "inline";
        if(nav.mapPixelYouWant.x >=b.maxX){
                nav.mapOffsetScaled.x = (nav.worldMapGifWidth * nav.worldMapZoom) -gameSize.width;
                nav.mapPixelYouWant.x = b.maxX;
                O("map-right").style.display = "none";
        }else O("map-right").style.display = "inline";
        if(nav.mapPixelYouWant.y >=b.maxY){
                nav.mapOffsetScaled.y = (nav.worldMapGifHeight * nav.worldMapZoom) -gameSize.height;
                nav.mapPixelYouWant.y = b.maxY;
                O("map-down").style.display = "none";
        }else O("map-down").style.display = "inline";

        // narrower than screen?
        b.scaledMapFullWidth = nav.worldMapZoom * nav.worldMapGifWidth,
        b.scaledMapFullHeight = nav.worldMapZoom * nav.worldMapGifHeight;
        if(b.scaledMapFullWidth < gameSize.width){ // center the map and where you look
            nav.mapPixelYouWant.x  = Math.floor(b.scaledMapFullWidth/2);
            nav.mapPixelYouWant.y  = Math.floor(b.scaledMapFullHeight/2);
            nav.mapOffsetScaled.x =0;
            nav.mapOffsetScaled.y =0;
        }

        // position map
        O("worldMap").style.left = (0 - nav.mapOffsetScaled.x) + "px";
        O("worldMap").style.top = (0 - nav.mapOffsetScaled.y) + "px";

        // update map-marker
        function updateMarker(id,sceneX, sceneY){
            b.el =O(id);
            if(sceneY <0){ // not on screen
                b.el.style.display = "none";
                return;
            }
            b.markerRelativeToGifBackX = Math.floor(nav.worldMapZoom * sceneX/nav.scenesPerPixel); // get pixels from scene number
            b.markerRelativeToGifBackY = Math.floor(nav.worldMapZoom * sceneY/nav.scenesPerPixel);
            if( b.markerRelativeToGifBackY >5){
                if(id=="map-marker"){
                    b.markerRelativeToGifBackX -= 17; // point of person is at 17,81, floor of cross is at 22,86
                    b.markerRelativeToGifBackY -= 81;
                }else if(id=="map-target"){
                    b.markerRelativeToGifBackX -= 22; // point of arrow is at 17,81
                    b.markerRelativeToGifBackY -= 86;
                }
            }
            b.el.style.left = b.markerRelativeToGifBackX + "px";
            b.el.style.top = b.markerRelativeToGifBackY + "px";
            b.el.style.display = "inline";
        }
        updateMarker("map-marker",nav.sceneX, nav.sceneY);
        updateMarker("map-target", nav.mapTarget[0] * nav.scenesPerPixel, nav.mapTarget[1] * nav.scenesPerPixel);
        testShowData();
    }
    function clickMapLabel(){  l("clickMapLabel: trying to go to scene '" +db.mapLocations[which].name+ "'"); // default: look for that location
        nav.removeYesCancel();
        nav.sceneX = nav.mapScene.x(which);
        nav.sceneY = nav.mapScene.y(which);
        nav.sceneZ = 0; // map locations are on the surface of the Earth
        nav.autoScene =1; O("autoScene").innerHTML =" autoscene ON"; // otherwise it won't check
        // sceneType decided later, based on mapPixel
        which = "off"; // so when you carry on the parent function the map closes
        active.queue = []; // forget everything: user rebooted to a new scene
        fillScene(); // NEEDS CLOCK TO RUN!!!
    }
    // map clicks
    if(m.positiveInteger(which)) // a number? cannot just use "typeOf" as the label was created on the fly using a string
        clickMapLabel(); // changes scene, then changes "which" to "off"
    if(which =='off'){
        nav.mapStatus=which;
        O("mapContainer").style.display ="none";
        clock.gamePaused =0;
        testShowData();
        return;
    }else{
        if(nav.mapStatus=="off"){ // turning on?
            if(which =='showWorldMap'){ // reset world map, but keep scale factor
                turnOnMapContainer();
                nav.mapPixelYouWant.x = Math.floor(nav.sceneX/nav.scenesPerPixel);
                nav.mapPixelYouWant.y = Math.floor(nav.sceneY/nav.scenesPerPixel);
                O("map-marker").style.display ="inline";
                O("map-zoomin").style.display = (nav.worldMapZoom <nav.maxMapZoom) ? "inline" : "none";
                O("map-zoomout").style.display =(nav.worldMapZoom >nav.minMapZoom) ? "inline" : "none";
                resizeWorldMap(1);
                setTimeout(function(){ O("mapGif").src ="c/i/worldMap.gif"; }, 20);
            }
        }else{
            if(nav.mapStatus=="showWorldMap"){ // already showing worldmap?
                let d={"moveByX":0, "moveByY":0};
                d.moveByX = Math.floor((gameSize.width/3)/ nav.worldMapZoom), // e.g. highly zoomed in? Only move a few map pixels
                d.moveByY = Math.floor((gameSize.height/3)/ nav.worldMapZoom);
                switch(which){
                    case "clickOnMap" : {
                        if(nav.yesCancelStatus =="off"){ // not on. If on, don't react to map click.
                            if(nav.worldMapZoom ==nav.maxMapZoom){
                                let f={"newX":0, "newY":0, "i":0,"howNear":0, "island":-1 }
                                function checkForIsland(){
                                    f.howNear =2; // two map pixels
                                    for(f.i=0; f.i<db.islands.length; f.i++) // look through islands
                                        if(    ((db.islands[f.i][0] +f.howNear) >=nav.mapPixelYouWant.x)
                                             &&((db.islands[f.i][0] -f.howNear) <=nav.mapPixelYouWant.x)
                                             &&((db.islands[f.i][1] +f.howNear) >=nav.mapPixelYouWant.y)
                                             &&((db.islands[f.i][1] -f.howNear) <=nav.mapPixelYouWant.y)
                                            )return;
                                    f.i =-1;// nothing found
                                }
                                function showMapCircle(){
                                    let g= O("circleOnMapClick");
                                    g.style.left =(a.mouseXpx -49)+ "px";
                                    g.style.top =(a.mouseYpx -48)+ "px";
                                    g.style.display="inline";
                                }
                                getmapXY();
                                checkForIsland();
                                if(f.i >-1){// found island
                                    showMapCircle();
                                    l("XXX found island '" +f.i+ " at(" +Math.floor(a.mouseXpx)+ "px," +Math.floor(a.mouseYpx)+ "px) =map(" +nav.mapPixelYouWant.x+ "px," +nav.mapPixelYouWant.y+ "px)");
                                    checkMouseClick("mapIsland",f.i,0,Math.floor(a.mouseYpx)); // island number, 0, position for yes/cancel option
                                }else{
                                    showMapCircle();
                                    if(nav.sceneXYisLand(nav.mapPixelYouWant.x *nav.scenesPerPixel, nav.mapPixelYouWant.y *nav.scenesPerPixel))// needs scene numbers, not pixels
                                         checkMouseClick("mapLand",nav.mapPixelYouWant.x, nav.mapPixelYouWant.y, a.mouseYpx); // shows yes/cancel option
                                    else checkMouseClick("mapSea", nav.mapPixelYouWant.x, nav.mapPixelYouWant.y, a.mouseYpx);
                                }
                            }
                            else{ a.toMouse =1; resizeWorldMap(1.5);  }
                        }
                        break;
                    }
                    case "zoomin"   : { resizeWorldMap(1.5);  break; }
                    case "zoomout"  : { resizeWorldMap(0.7); nav.removeYesCancel(); break; }
                    case "up"       : { nav.mapPixelYouWant.y = nav.mapPixelYouWant.y -d.moveByY; nav.removeYesCancel(); repositionWorldMap(); break;}
                    case "down"     : { nav.mapPixelYouWant.y = nav.mapPixelYouWant.y +d.moveByY; nav.removeYesCancel(); repositionWorldMap(); break;}
                    case "left"     : { nav.mapPixelYouWant.x = nav.mapPixelYouWant.x -d.moveByX; nav.removeYesCancel(); repositionWorldMap(); break;}
                    case "right"    : { nav.mapPixelYouWant.x = nav.mapPixelYouWant.x +d.moveByX; nav.removeYesCancel(); repositionWorldMap(); break;}
                }
            }
        }
    }
}
nav.sceneXYisIsland =function(sceneX,sceneY,sceneZ=0){ // 0 = not island, 1=on pixel, 2= precise corner harbour
    let a={"i":0, "sceneMapPixel":{"x":0,"y":0},  "islandPixel":{"x":0,"y":0}, "islandScene":{"x":0,"y":0}};
    // prepare
    if(sceneZ !=0)return 0; // islands are always z==0
    a.sceneMapPixel.x = Math.floor(sceneX/1000);
    a.sceneMapPixel.y = Math.floor(sceneY/1000);
    for(a.i =0; a.i <db.islands.length; a.i ++){// look through all islands
        a.islandPixel.x = db.islands[a.i][0];
        a.islandPixel.y = db.islands[a.i][1];
            // at harbour?
        a.islandScene.x = a.islandPixel.x * nav.scenesPerPixel;
        a.islandScene.y = a.islandPixel.y * nav.scenesPerPixel;
        if((sceneX ==a.islandScene.x)&&(sceneY ==a.islandScene.y)){
            l("ISLAND OF " +getName("island",a.i));
            return 2;
        }
        // elsewhere on that pixel?         // harbour is at (0,0) NOT at center
        if(  (a.sceneMapPixel.x ==a.islandPixel.x)
           &&(a.sceneMapPixel.y ==a.islandPixel.y)){  l("island of " +getName("island",a.i));// lower case
                return 1;
            }
        // this pixel is NEXT TO ISLAND PIXEL? Force it to be sea
        if(a.sceneMapPixel.x ==a.islandPixel.x){
           if((a.sceneMapPixel.y +1) ==a.islandPixel.y){  l("pixel ABOVE island");
                return -1; // pixel next to island, so force to be sea
            }
           if((a.sceneMapPixel.y -1) ==a.islandPixel.y){  l("on pixel BELOW island");
                 return -1;
             }
        }else if(a.sceneMapPixel.y ==a.islandPixel.y){
            if((a.sceneMapPixel.x +1) ==a.islandPixel.x){  l("on pixel LEFT of island");
                 return -1; // pixel next to island, so force to be sea
             }
            if((a.sceneMapPixel.x -1) ==a.islandPixel.x){  l("on pixel RIGHT of island");
                  return -1;
              }
        }
    }return 0;
}

nav.sceneXYisLand = function(sceneX,sceneY){ // those pixels on map
    let a={"line":0, "i":0, "j":0, "k":0, "isIsland":0, "sceneMapPixel":{"x":0,"y":0}, "landArrayPosition":{"x":0,"y":0}};
    // island pixel?
    a.isIsland =nav.sceneXYisIsland(sceneX,sceneY); //-1=NEXT pixel;  0=no;  1=precise island harbour;  2=elsewhere on island
    if(a.isIsland >0) return 1;
    else if(a.isIsland == -1){l("XXX NOT LAND - NEXT TO ISLAND");
       return 0;// pixel by island is always sea
    }
    // still here?
    function decompress(){// create array 1/5 the scale of map
        let mask=[// 3 means 0,0,0     -3 means 1,1,1
[1000],[1000],[1000],[1000],[1000],[293,-9,57,-2,1,-5,1,-31,601],[280,-39,36,-51,594],[270,-5,3,-45,22,-6,1,-56,592],[261,-62,3,-18,1,-57,1,-5,3,-2,587],[256,-61,4,-87,1,-19,147,-4,1,-1,7,-2,410],[249,-6,3,-170,134,-1,8,-1,1,-8,2,-4,5,-3,54,-3,6,-4,338],[245,-11,3,-48,3,-113,131,-5,1,-6,5,-11,1,-12,60,-12,333],[242,-20,2,-6,1,-32,3,-113,74,-5,4,-2,2,-2,45,-12,4,-4,2,-13,66,-13,333],[233,-3,5,-21,1,-36,6,-112,65,-2,4,-25,9,-3,31,-5,1,-4,2,-3,1,-1,3,-5,73,-19,327],[233,-3,5,-55,13,-101,1,-4,62,-10,1,-25,51,-2,88,-21,325],[218,-7,16,-46,19,-105,66,-21,1,-11,152,-13,3,-4,2,-1,315],[218,-10,15,-44,11,-112,67,-24,165,-10,2,-10,312],[201,-7,10,-12,3,-7,4,-42,4,-117,70,-26,174,-13,310],[194,-2,3,-9,10,-12,3,-7,5,-6,1,-2,3,-27,5,-118,72,-1,2,-14,4,-6,171,-12,311],[193,-11,9,-2,6,-4,1,-4,3,-9,11,-6,1,-18,1,-1,11,-119,74,-11,6,-7,181,-1,310],[185,-1,1,-3,6,-8,9,-3,19,-7,4,-4,3,-24,17,-1,1,-2,1,-2,1,-106,1,-1,75,-10,5,-4,1,-3,177,-10,305],[179,-12,22,-3,16,-6,8,-27,1,-1,16,-121,74,-7,113,-4,74,-15,301],[175,-13,14,-3,8,-2,5,-5,2,-1,4,-43,16,-114,2,-5,77,-4,111,-7,73,-14,3,-10,289],[171,-10,1,-3,1,-5,8,-6,8,-4,1,-11,4,-32,1,-6,1,-1,19,-114,2,-2,183,-2,3,-12,62,-1,6,-33,287],[170,-10,1,-1,2,-11,5,-5,2,-2,4,-16,10,-7,24,-1,24,-12,4,-97,2,-1,180,-18,59,-47,56,-5,3,-3,218],[175,-1,1,-33,3,-15,3,-4,4,-12,3,-13,48,-93,179,-18,57,-55,50,-2,2,-19,210],[177,-2,1,-32,4,-1,2,-8,1,-8,2,-31,48,-95,173,-14,60,-59,50,-1,2,-19,3,-6,1,-2,198],[182,-5,1,-19,2,-3,7,-6,3,-8,2,-30,50,-89,2,-4,170,-12,60,-62,56,-17,5,-10,195],[185,-11,33,-6,3,-28,53,-90,174,-11,59,-62,61,-3,20,-5,196],[160,-13,1,-4,8,-6,37,-1,16,-2,1,-2,1,-1,1,-2,5,-1,57,-90,174,-9,61,-60,2,-5,63,-2,215],[160,-19,38,-1,1,-5,4,-12,80,-86,175,-10,65,-55,1,-4,1,-2,64,-3,1,-2,211],[159,-21,20,-6,7,-11,3,-13,4,-9,2,-6,1,-8,51,-74,1,-9,175,-10,54,-66,2,-10,1,-8,1,-1,12,-5,36,-6,208],[157,-25,14,-2,1,-7,7,-10,3,-12,4,-8,1,-20,49,-85,176,-8,30,-4,21,-63,3,-25,10,-12,28,-9,206],[155,-32,3,-2,3,-9,4,-3,3,-10,1,-11,4,-8,1,-23,48,-81,177,-9,31,-7,4,-2,1,-1,8,-2,2,-101,1,-14,28,-1,210],[154,-34,2,-3,2,-7,6,-15,2,-9,5,-8,1,-14,1,-10,46,-75,1,-6,177,-9,31,-10,4,-2,4,-2,1,-2,3,-115,28,-12,199],[152,-16,1,-25,1,-7,7,-14,2,-5,7,-10,2,-25,46,-76,1,-4,178,-8,31,-10,5,-2,2,-8,2,-116,24,-23,190],[151,-14,2,-26,1,-8,10,-10,2,-4,9,-9,1,-28,44,-79,179,-10,31,-10,4,-3,2,-11,3,-113,25,-25,186],[19,-3,131,-10,3,-36,10,-9,1,-6,8,-44,38,-69,1,-12,177,-11,29,-11,2,-5,1,-129,7,-3,5,-35,73,-4,108],[18,-6,49,-2,79,-8,5,-34,12,-3,3,-10,7,-45,38,-5,2,-75,177,-11,26,-13,2,-137,5,-49,66,-5,108],[17,-6,48,-7,76,-2,10,-34,19,-9,8,-3,1,-42,40,-2,5,-62,3,-6,111,-1,1,-3,3,-4,58,-1,1,-8,24,-15,2,-21,1,-116,3,-49,6,-10,48,-6,108],[64,-19,83,-35,17,-10,8,-50,34,-7,1,-64,2,-7,106,-20,57,-9,22,-16,2,-209,46,-1,111],[59,-33,48,-2,27,-6,2,-28,12,-12,7,-51,32,-65,1,-8,2,-5,103,-1,1,-24,58,-1,2,-1,1,-1,3,-3,18,-14,3,-211,155],[55,-49,28,-3,3,-5,4,-1,17,-41,11,-12,10,-1,1,-20,1,-26,31,-5,1,-72,102,-3,1,-1,1,-23,68,-5,16,-14,2,-212,20,-2,4,-4,125],[53,-53,22,-14,3,-3,2,-5,10,-41,5,-3,3,-10,1,-1,14,-16,3,-27,29,-8,1,-70,101,-32,1,-4,64,-10,8,-15,2,-213,7,-3,8,-5,2,-16,112],[51,-60,9,-4,1,-23,1,-8,9,-36,2,-1,5,-21,11,-9,5,-1,2,-2,1,-1,1,-24,31,-7,1,-67,101,-41,37,-3,25,-12,5,-14,2,-236,2,-22,2,-1,103],[48,-65,4,-45,5,-35,2,-2,1,-9,4,-14,8,-10,5,-3,2,-27,31,-2,4,-65,100,-2,2,-49,28,-6,21,-1,2,-15,4,-12,2,-237,3,-23,1,-1,100],[41,-128,2,-21,1,-8,3,-2,1,-10,1,-11,1,-5,6,-11,5,-2,4,-22,41,-64,99,-58,25,-5,7,-3,9,-5,2,-17,3,-12,3,-6,1,-259,9,-1,86],[39,-131,2,-9,2,-11,6,-1,8,-6,4,-16,5,-11,14,-21,35,-51,1,-12,104,-59,14,-6,12,-8,2,-11,1,-20,2,-12,2,-271,4,-4,83],[38,-132,12,-11,14,-7,3,-18,1,-2,1,-10,12,-27,32,-53,1,-5,110,-2,1,-59,12,-6,9,-58,2,-8,1,-273,80],[40,-126,6,-1,1,-7,1,-16,2,-5,1,-27,3,-13,11,-10,1,-21,27,-54,117,-65,8,-7,5,-61,4,-280,80],[41,-172,1,-19,3,-14,9,-7,1,-3,1,-22,25,-52,120,-66,7,-4,6,-63,3,-282,79],[41,-208,10,-5,7,-24,22,-52,120,-68,6,-4,6,-62,4,-283,78],[41,-207,21,-29,19,-51,119,-71,7,-4,3,-63,4,-283,78],[36,-2,5,-104,2,-97,21,-31,20,-38,1,-9,45,-2,73,-71,8,-69,3,-285,78],[32,-6,5,-101,4,-96,21,-33,19,-40,1,-5,1,-1,29,-3,14,-4,71,-53,3,-14,3,-5,1,-358,77],[29,-116,8,-82,2,-3,24,-19,2,-10,22,-45,31,-6,2,-2,1,-12,69,-57,7,-4,4,-367,76],[25,-117,6,-90,1,-2,23,-18,4,-9,22,-38,1,-3,1,-1,30,-8,2,-16,68,-57,13,-370,75],[24,-117,1,-84,1,-5,1,-5,17,-3,1,-1,1,-21,4,-7,24,-34,40,-28,65,-26,7,-25,12,-372,74],[25,-114,2,-90,1,-8,13,-29,5,-4,27,-33,44,-24,64,-26,9,-25,5,-2,5,-373,72],[25,-205,1,-10,11,-33,4,-1,29,-30,42,-27,63,-27,8,-27,4,-6,3,-359,1,-4,2,-6,72],[25,-11,2,-190,2,-13,9,-34,32,-31,46,-21,65,-28,7,-28,4,-365,5,-1,4,-6,4,-4,63],[37,-190,3,-13,9,-6,2,-1,2,-23,32,-30,48,-19,64,-29,6,-33,2,-366,18,-4,63],[37,-188,3,-17,20,-22,32,-29,46,-17,67,-30,5,-37,1,-365,17,-2,1,-1,63],[31,-1,3,-185,6,-10,3,-6,7,-2,12,-21,32,-29,51,-9,67,-31,5,-406,83],[30,-187,13,-4,8,-1,6,-2,2,-1,12,-10,1,-10,33,-27,55,-4,67,-32,5,-409,81],[23,-165,1,-28,13,-3,2,-1,1,-2,10,-2,15,-11,2,-5,36,-26,125,-31,6,-413,79],[22,-194,18,-5,19,-2,8,-11,2,-3,37,-23,126,-31,7,-415,77],[20,-143,1,-49,20,-5,10,-5,6,-2,7,-2,1,-8,4,-2,36,-22,126,-31,8,-373,3,-33,1,-5,77],[18,-133,3,-5,1,-50,23,-3,6,-4,2,-14,11,-7,42,-21,91,-3,29,-33,10,-373,2,-31,85],[16,-136,4,-53,33,-3,2,-16,14,-3,1,-1,40,-20,92,-2,30,-33,10,-36,2,-336,2,-29,86],[15,-134,7,-51,35,-2,4,-17,15,-3,40,-19,124,-33,11,-36,2,-320,5,-1,1,-9,1,-27,88],[15,-132,5,-53,42,-17,17,-1,42,-17,125,-33,11,-23,4,-10,2,-319,8,-5,5,-25,89],[15,-40,1,-89,5,-54,42,-24,55,-15,126,-33,10,-24,6,-328,10,-4,5,-24,90],[14,-49,1,-139,42,-24,56,-15,126,-34,10,-25,5,-327,11,-2,5,-25,90],[9,-3,1,-36,1,-10,5,-137,44,-22,3,-2,7,-2,50,-7,127,-36,4,-1,4,-17,1,-7,4,-327,17,-16,1,-7,92],[6,-6,2,-33,1,-11,9,-133,45,-22,11,-3,50,-6,129,-36,2,-3,3,-1,1,-8,9,-6,1,-329,18,-11,1,-3,7,-2,92],[7,-4,3,-5,1,-26,1,-10,18,-125,46,-21,11,-4,52,-3,129,-38,10,-3,12,-337,18,-7,2,-2,2,-1,102],[19,-25,2,-6,24,-2,1,-121,44,-23,10,-6,184,-37,14,-9,1,-325,2,-14,14,-8,109],[18,-23,4,-4,30,-79,4,-37,44,-25,9,-6,184,-36,13,-327,1,-9,7,-10,13,-9,108],[17,-24,40,-75,1,-42,43,-25,9,-7,161,-2,22,-13,2,-20,10,-2,1,-319,24,-6,17,-10,2,-3,103],[16,-4,3,-2,1,-14,41,-121,39,-28,4,-11,160,-1,23,-11,4,-17,13,-322,48,-8,3,-2,104],[23,-2,2,-11,2,-2,40,-120,40,-42,151,-2,2,-6,23,-10,5,-16,13,-323,47,-10,108],[26,-10,2,-4,41,-119,41,-41,149,-3,2,-6,26,-6,8,-15,13,-3,4,-315,47,-11,108],[25,-8,2,-5,43,-93,1,-25,42,-42,148,-2,1,-6,42,-14,4,-2,14,-315,45,-17,104],[24,-7,2,-7,43,-92,1,-26,42,-42,147,-1,1,-14,31,-2,3,-14,3,-3,7,-4,3,-315,45,-18,103],[21,-7,4,-6,45,-6,1,-84,1,-27,1,-4,37,-42,147,-1,1,-13,30,-4,4,-13,3,-3,6,-6,2,-314,47,-17,103],[20,-7,4,-5,47,-90,1,-36,34,-42,147,-1,2,-12,28,-6,4,-14,2,-2,7,-321,48,-18,102],[17,-7,8,-1,50,-128,33,-42,149,-12,28,-7,6,-11,11,-322,47,-21,76,-1,23],[14,-7,62,-130,23,-2,5,-42,151,-10,29,-8,5,-11,11,-322,48,-21,74,-2,23],[12,-7,64,-1,1,-128,21,-4,4,-43,152,-9,29,-8,3,-11,13,-321,49,-22,98],[7,-10,69,-129,26,-46,148,-13,27,-6,3,-9,18,-320,50,-18,6,-1,65,-2,27],[5,-7,73,-132,23,-47,149,-3,1,-9,26,-8,1,-4,1,-4,18,-244,1,-74,51,-18,71,-3,27],[3,-4,1,-3,74,-134,1,-2,16,-50,144,-2,1,-1,1,-1,1,-10,27,-7,1,-4,1,-4,1,-1,16,-244,1,-73,53,-18,69,-2,29],[-6,79,-141,9,-55,139,-8,2,-11,27,-10,7,-1,13,-247,1,-72,5,-3,47,-19,98],[-2,84,-2,2,-136,6,-62,135,-9,1,-11,27,-4,3,-3,13,-5,4,-246,2,-73,2,-1,1,-2,48,-19,61,-1,35],[91,-134,7,-63,134,-10,4,-9,25,-6,1,-1,3,-3,7,-7,3,-247,2,-76,52,-14,2,-1,98],[83,-1,6,-134,8,-62,131,-13,2,-1,3,-9,24,-7,2,-6,4,-259,2,-79,3,-4,6,-2,35,-13,14,-1,86],[82,-5,2,-135,9,-61,131,-11,9,-8,24,-278,2,-80,2,-6,5,-2,35,-12,20,-1,80],[82,-3,4,-88,3,-44,9,-64,128,-11,8,-10,19,-281,2,-91,4,-2,35,-12,100],[82,-3,4,-87,4,-44,8,-65,128,-11,4,-15,14,-286,2,-97,35,-12,99],[81,-4,4,-87,4,-47,5,-65,130,-10,3,-16,10,-1,1,-287,2,-92,1,-5,35,-9,2,-1,36,-1,61],[82,-2,6,-86,4,-47,5,-65,129,-10,4,-18,8,-287,2,-95,1,-5,35,-8,38,-2,61],[82,-2,6,-86,4,-44,8,-65,128,-11,5,-18,7,-286,2,-97,1,-4,36,-7,101],[83,-1,7,-86,3,-44,8,-64,128,-11,6,-17,7,-286,1,-105,36,-7,100],[91,-88,1,-45,6,-65,128,-8,6,-20,6,-287,2,-104,37,-6,100],[91,-135,2,-1,1,-65,129,-6,8,-18,7,-285,3,-101,1,-6,36,-5,100],[91,-135,1,-69,130,-2,15,-15,4,-390,3,-4,37,-3,101],[91,-197,4,-3,146,-16,3,-392,4,-5,36,-2,101],[89,-89,1,-107,5,-4,145,-16,1,-396,4,-5,35,-1,102],[88,-197,5,-4,145,-11,7,-396,4,-5,34,-2,102],[88,-195,6,-4,144,-6,14,-397,4,-5,33,-2,102],[89,-174,25,-6,143,-2,18,-398,3,-6,32,-1,103],[90,-6,1,-165,7,-4,14,-7,154,-1,5,-401,4,-7,134],[90,-7,1,-163,9,-5,11,-9,2,-2,148,-4,2,-403,4,-7,133],[91,-7,1,-161,2,-6,3,-5,10,-14,148,-408,4,-4,1,-2,28,-2,103],[92,-6,2,-156,3,-10,16,-14,149,-409,4,-3,136],[93,-108,2,-52,2,-12,15,-15,1,-1,139,-417,4,-3,31,-1,104],[94,-104,7,-63,15,-18,138,-418,5,-3,135],[93,-105,7,-61,16,-19,139,-417,6,-2,135],[93,-101,1,-2,8,-58,3,-1,14,-19,140,-416,7,-3,134],[93,-99,13,-1,1,-59,15,-20,143,-412,8,-3,133],[93,-97,6,-3,8,-58,27,-3,1,-5,145,-410,8,-4,132],[93,-95,6,-4,9,-58,12,-1,12,-4,2,-4,147,-118,1,-290,9,-4,131],[92,-98,1,-8,6,-1,1,-58,1,-1,9,-2,18,-4,147,-114,3,-37,2,-253,9,-6,22,-1,106],[92,-173,1,-3,1,-1,4,-3,170,-96,1,-13,5,-36,8,-249,10,-2,1,-2,129],[91,-181,2,-5,170,-94,3,-10,8,-35,8,-249,10,-2,23,-1,108],[91,-176,3,-1,2,-6,170,-93,7,-1,1,-4,9,-32,11,-249,11,-1,22,-2,108],[90,-111,1,-1,1,-3,4,-4,2,-60,172,-92,8,-7,7,-33,11,-18,1,-1,1,-227,35,-1,109],[90,-108,6,-4,9,-58,174,-42,2,-48,7,-8,1,-5,1,-31,10,-23,2,-226,13,-2,18,-1,111],[89,-109,4,-7,5,-1,3,-43,1,-12,175,-41,3,-48,9,-42,11,-25,2,-211,1,-13,13,-3,15,-2,112],[89,-109,2,-9,5,-2,2,-39,4,-10,178,-41,3,-47,11,-6,5,-30,8,-1,1,-26,2,-211,1,-12,15,-3,13,-2,113],[88,-109,2,-10,5,-3,1,-38,3,-9,181,-41,6,-42,13,-4,8,-28,10,-24,1,-1,4,-223,15,-5,11,-2,113],[88,-108,3,-9,5,-40,5,-6,185,-41,7,-41,14,-2,11,-27,9,-26,3,-224,16,-6,7,-1,116],[87,-109,2,-9,1,-1,3,-38,8,-6,185,-29,3,-10,6,-41,30,-25,10,-250,17,-9,1,-4,116],[86,-109,3,-12,2,-11,2,-1,2,-20,10,-4,168,-1,18,-27,7,-9,7,-39,31,-25,9,-250,17,-13,117],[86,-108,3,-13,1,-8,8,-19,13,-1,168,-10,4,-1,5,-27,8,-11,6,-38,32,-24,10,-249,18,-12,117],[85,-109,3,-13,1,-7,1,-26,181,-38,4,-5,11,-10,8,-35,34,-23,11,-247,16,-2,1,-13,116],[84,-109,4,-47,181,-38,7,-2,9,-1,2,-11,8,-33,37,-22,11,-238,1,-6,18,-14,117],[84,-109,4,-20,1,-26,182,-37,17,-2,2,-11,10,-31,39,-20,12,-236,3,-4,18,-12,120],[83,-110,4,-14,6,-26,183,-37,15,-4,4,-10,11,-29,40,-20,13,-233,26,-5,1,-5,121],[83,-110,3,-14,5,-28,184,-36,15,-4,6,-9,12,-27,41,-20,12,-232,27,-3,5,-4,120],[83,-110,2,-13,4,-31,183,-37,16,-3,6,-14,8,-27,13,-8,19,-21,11,-2,2,-227,30,-4,5,-1,120],[83,-123,4,-34,182,-36,17,-2,9,-11,10,-26,12,-12,16,-22,10,-2,3,-226,30,-2,128],[82,-34,1,-123,1,-2,184,-33,20,-1,10,-11,9,-28,8,-16,13,-24,10,-1,4,-226,30,-1,1,-3,124],[82,-34,1,-120,190,-32,21,-2,12,-11,6,-56,2,-3,2,-26,16,-225,31,-4,124],[81,-35,1,-121,189,-29,22,-5,12,-11,5,-90,10,-3,1,-227,30,-5,123],[80,-155,192,-28,22,-6,13,-12,3,-14,6,-73,7,-204,4,-22,31,-6,122],[80,-152,194,-29,23,-5,15,-6,1,-4,2,-14,7,-72,7,-204,4,-21,33,-6,121],[80,-151,195,-28,11,-1,12,-5,15,-5,4,-2,3,-9,2,-1,6,-72,9,-204,4,-20,34,-7,120],[81,-150,195,-27,8,-3,1,-1,12,-5,17,-3,4,-2,3,-10,6,-2,1,-71,11,-200,5,-19,36,-7,120],[80,-150,195,-28,7,-4,14,-5,18,-4,8,-10,8,-71,11,-200,5,-5,5,-9,37,-7,119],[80,-149,196,-28,9,-1,15,-5,18,-4,9,-9,1,-1,6,-71,11,-199,7,-3,8,-8,36,-7,119],[80,-146,1,-1,196,-29,4,-1,20,-3,20,-4,10,-10,6,-70,14,-196,8,-2,9,-9,36,-6,119],[80,-147,197,-30,3,-1,43,-3,11,-11,7,-68,15,-193,9,-2,11,-10,33,-7,119],[80,-147,139,-3,56,-28,48,-2,12,-12,4,-70,15,-193,22,-11,32,-7,119],[81,-145,200,-26,41,-1,5,-4,11,-2,1,-11,5,-69,14,-195,1,-1,17,-13,32,-5,120],[81,-141,1,-2,151,-1,49,-25,40,-11,15,-12,6,-67,14,-198,18,-12,28,-9,119],[81,-143,152,-1,49,-25,40,-8,18,-7,1,-2,8,-68,13,-199,3,-4,11,-1,1,-10,28,-8,119],[81,-142,203,-23,33,-1,10,-7,18,-7,10,-71,11,-198,2,-9,11,-9,22,-2,3,-9,118],[81,-140,205,-22,32,-5,10,-5,18,-5,7,-1,5,-71,10,-209,12,-9,21,-2,3,-9,118],[82,-140,211,-15,14,-7,1,-17,10,-3,19,-5,3,-1,1,-2,5,-1,1,-71,5,-212,11,-10,22,-13,118],[81,-141,211,-7,4,-1,11,-31,11,-1,20,-1,1,-3,14,-1,1,-7,2,-9,1,-3,1,-260,14,-11,21,-13,118],[81,-141,212,-4,17,-31,37,-1,14,-1,3,-5,4,-6,5,-260,17,-9,21,-13,118],[82,-140,213,-2,16,-33,51,-2,13,-3,7,-260,17,-10,19,-15,117],[82,-140,213,-2,13,-36,76,-258,20,-9,19,-15,117],[82,-140,212,-4,11,-38,38,-3,7,-1,21,-1,4,-258,20,-10,9,-25,116],[83,-137,214,-5,1,-5,3,-39,38,-7,1,-1,19,-5,5,-256,21,-10,9,-24,117],[83,-136,215,-53,42,-5,18,-6,5,-256,21,-9,9,-22,1,-2,117],[83,-136,214,-54,65,-4,7,-257,20,-6,1,-1,9,-23,120],[83,-134,216,-53,77,-259,18,-5,4,-1,5,-10,2,-1,1,-6,125],[86,-129,217,-53,77,-261,18,-2,12,-7,2,-10,126],[87,-127,217,-54,77,-262,31,-13,1,-4,127],[88,-123,218,-58,75,-263,29,-3,1,-1,2,-7,1,-3,128],[90,-120,217,-61,73,-265,16,-3,7,-7,2,-6,4,-1,128],[90,-119,217,-64,71,-265,26,-8,1,-4,135],[90,-118,217,-66,2,-2,24,-4,38,-266,24,-1,1,-8,1,-2,136],[90,-117,218,-73,19,-8,36,-267,22,-2,2,-7,139],[91,-114,219,-77,15,-9,36,-268,26,-6,139],[91,-112,221,-77,14,-15,31,-269,26,-5,139],[91,-112,220,-78,14,-16,29,-271,26,-4,139],[91,-111,221,-79,13,-21,13,-3,8,-271,26,-4,139],[91,-6,3,-101,221,-84,9,-25,6,-7,6,-273,25,-4,139],[91,-6,4,-99,222,-86,7,-28,2,-287,27,-1,140],[92,-5,4,-99,222,-88,5,-317,168],[92,-5,4,-99,222,-90,2,-316,29,-1,140],[92,-4,5,-81,1,-1,1,-15,223,-409,27,-1,140],[92,-4,5,-74,11,-14,222,-184,1,-1,1,-226,165],[92,-5,4,-74,12,-2,3,-8,222,-182,6,-224,166],[93,-6,3,-57,5,-2,1,-7,19,-7,221,-183,7,-224,165],[94,-6,1,-56,11,-4,1,-2,18,-7,210,-1,9,-135,1,-48,7,-224,165],[95,-4,2,-55,38,-7,209,-1,8,-137,1,-47,8,-222,166],[95,-4,4,-51,40,-7,208,-1,8,-138,1,-48,8,-221,166],[96,-4,3,-48,43,-7,199,-3,6,-1,7,-189,7,-222,165],[95,-5,4,-46,43,-8,199,-2,2,-1,3,-2,4,-192,7,-221,22,-1,143],[92,-8,4,-45,44,-8,202,-2,7,-149,3,-43,7,-219,167],[92,-8,5,-43,45,-8,210,-148,5,-43,10,-215,168],[93,-8,4,-43,45,-8,210,-149,5,-43,10,-214,168],[93,-8,5,-41,46,-9,209,-149,5,-45,9,-213,168],[95,-7,5,-40,47,-8,208,-150,6,-45,10,-10,1,-199,169],[97,-6,6,-38,47,-8,207,-152,6,-44,13,-4,5,-198,169],[98,-5,6,-38,48,-6,207,-153,6,-45,18,-1,2,-198,21,-1,147],[99,-4,5,-39,48,-6,4,-1,201,-155,6,-45,1,-2,14,-1,2,-198,169],[99,-4,5,-39,49,-5,4,-1,1,-1,198,-157,6,-43,1,-3,13,-2,3,-197,169],[99,-4,6,-38,50,-3,206,-157,6,-47,12,-3,7,-194,168],[99,-4,7,-35,52,-3,206,-158,6,-47,10,-5,11,-16,4,-167,6,-2,162],[98,-6,7,-34,61,-1,2,-1,196,-158,6,-47,9,-6,16,-1,15,-166,5,-4,161],[98,-5,8,-33,61,-2,199,-159,6,-45,9,-7,33,-164,6,-4,161],[99,-5,8,-32,61,-2,198,-160,6,-45,9,-8,33,-162,7,-4,161],[100,-5,8,-31,62,-2,3,-1,192,-162,6,-46,1,-15,32,-161,7,-5,161],[101,-5,8,-30,62,-2,195,-163,8,-62,31,-160,7,-5,161],[102,-4,8,-29,259,-164,9,-64,30,-157,8,-5,161],[103,-4,8,-28,68,-3,188,-165,8,-65,30,-154,10,-5,161],[103,-3,9,-28,47,-8,203,-166,9,-65,30,-153,10,-5,161],[103,-2,11,-27,44,-13,201,-166,9,-66,30,-151,12,-4,161],[117,-26,42,-7,1,-8,2,-1,197,-168,8,-66,32,-144,16,-3,162],[117,-26,41,-5,3,-11,1,-1,12,-1,1,-1,180,-170,7,-67,28,-71,1,-73,19,-2,162],[117,-26,41,-4,5,-13,193,-172,6,-67,29,-10,1,-59,2,-70,22,-1,162],[117,-26,41,-1,3,-3,6,-10,192,-172,6,-66,31,-65,1,-1,4,-68,187],[117,-26,27,-6,12,-3,9,-8,191,-172,6,-66,32,-57,2,-1,1,-1,9,-53,1,-10,190],[117,-26,23,-11,25,-8,188,-174,5,-65,34,-7,1,-47,15,-51,6,-3,194],[117,-26,22,-12,25,-10,6,-2,178,-174,6,-63,36,-6,2,-46,16,-49,7,-3,194],[117,-26,21,-12,27,-11,186,-172,7,-62,37,-3,4,-46,17,-47,8,-3,194],[115,-29,20,-12,30,-9,185,-172,7,-63,43,-46,17,-46,10,-3,193],[115,-29,20,-10,31,-12,184,-171,9,-58,1,-1,44,-45,19,-45,11,-1,194],[116,-29,19,-10,31,-9,1,-1,2,-3,3,-3,174,-172,9,-56,47,-45,20,-43,10,-5,192],[116,-29,18,-11,44,-12,170,-173,10,-55,47,-43,24,-40,10,-7,191],[117,-28,17,-11,47,-10,170,-173,11,-54,48,-40,26,-40,9,-7,192],[118,-28,15,-12,47,-12,168,-173,11,-55,47,-39,28,-39,9,-7,192],[119,-28,13,-13,18,-1,28,-14,167,-173,11,-54,47,-39,28,-39,9,-6,193],[120,-29,7,-3,1,-12,31,-1,10,-4,2,-15,166,-174,10,-50,51,-38,29,-1,1,-38,8,-6,33,-2,158],[121,-29,2,-20,30,-5,7,-15,1,-4,3,-6,158,-175,10,-49,52,-36,32,-39,8,-4,33,-7,154],[122,-50,30,-7,7,-1,2,-1,2,-3,12,-7,157,-176,9,-49,52,-35,34,-39,44,-7,154],[126,-45,32,-6,14,-2,176,-177,9,-47,53,-34,35,-39,44,-7,154],[127,-43,53,-1,177,-177,10,-43,57,-33,36,-39,43,-7,154],[128,-42,82,-1,148,-178,10,-42,57,-31,38,-40,43,-7,153],[130,-40,201,-2,28,-178,10,-42,57,-30,39,-41,42,-7,153],[132,-38,203,-1,26,-179,11,-36,63,-29,38,-43,41,-7,153],[134,-35,86,-1,144,-180,10,-34,65,-29,38,-8,2,-34,40,-7,153],[136,-33,6,-1,78,-2,123,-2,19,-180,10,-32,67,-26,41,-7,4,-34,37,-8,154],[138,-9,3,-17,9,-2,1,-1,74,-1,124,-1,20,-180,11,-31,67,-26,41,-6,5,-35,36,-7,155],[141,-4,7,-31,217,-183,7,-32,68,-22,1,-1,44,-3,7,-35,36,-6,155],[152,-31,72,-1,143,-184,7,-31,70,-21,56,-36,35,-6,155],[153,-32,191,-2,20,-185,7,-29,72,-21,56,-37,35,-5,155],[154,-31,192,-1,19,-188,6,-25,76,-20,56,-37,35,-7,153],[155,-30,70,-2,140,-189,5,-23,78,-20,57,-36,36,-6,153],[156,-29,71,-1,141,-189,5,-20,81,-19,57,-37,36,-4,2,-2,150],[157,-28,71,-1,141,-190,4,-19,82,-19,57,-37,36,-9,149],[158,-26,72,-1,142,-190,3,-16,85,-20,56,-38,35,-13,145],[162,-22,215,-191,3,-14,87,-19,57,-37,35,-4,1,-8,145],[164,-20,215,-192,2,-8,2,-2,89,-19,40,-1,17,-6,2,-28,35,-4,1,-1,1,-1,1,-3,146],[170,-14,215,-193,1,-7,94,-19,40,-1,17,-6,2,-28,36,-3,4,-5,145],[170,-13,216,-200,96,-18,40,-1,18,-5,2,-28,36,-4,6,-2,145],[170,-13,216,-195,1,-2,28,-5,65,-18,40,-1,17,-6,2,-28,37,-3,5,-7,141],[171,-12,37,-3,176,-195,32,-3,67,-16,41,-1,16,-7,7,-23,38,-1,6,-2,1,-4,141],[172,-11,36,-4,2,-3,172,-194,23,-1,78,-16,41,-1,17,-6,7,-23,44,-4,1,-4,140],[173,-3,1,-6,35,-5,2,-3,172,-193,23,-3,78,-15,40,-2,17,-6,9,-21,40,-3,7,-3,140],[174,-2,2,-5,33,-5,4,-6,170,-1,1,-191,19,-6,79,-14,41,-1,19,-3,10,-21,41,-4,3,-5,140],[175,-2,1,-4,31,-8,2,-9,171,-192,11,-13,79,-14,61,-3,11,-19,34,-1,7,-4,2,-1,1,-4,140],[175,-8,27,-11,1,-10,13,-2,157,-191,10,-14,80,-13,60,-4,11,-18,34,-2,7,-7,1,-3,141],[175,-8,26,-23,13,-11,149,-191,4,-19,80,-13,40,-2,18,-4,13,-14,36,-2,7,-7,1,-3,141],[175,-8,25,-32,4,-7,2,-3,149,-215,79,-13,60,-3,14,-1,1,-11,37,-3,6,-1,1,-5,2,-2,141],[174,-10,24,-43,2,-3,150,-213,81,-11,61,-3,17,-8,38,-2,11,-9,140],[175,-10,23,-12,2,-31,155,-211,81,-10,63,-2,18,-7,37,-2,11,-8,2,-1,139],[177,-9,9,-1,12,-12,2,-33,154,-210,81,-10,2,-3,58,-2,18,-6,38,-2,11,-7,3,-2,138],[180,-7,6,-7,6,-15,1,-34,153,-209,83,-9,3,-2,57,-6,15,-5,38,-2,13,-3,6,-3,137],[181,-7,3,-10,4,-51,154,-208,83,-8,3,-4,56,-6,15,-4,38,-2,15,-1,7,-3,137],[181,-14,2,-5,3,-51,154,-207,84,-6,6,-4,55,-6,15,-2,39,-2,22,-5,137],[181,-14,3,-61,151,-207,85,-5,5,-5,55,-7,14,-2,38,-2,18,-2,2,-7,136],[183,-11,4,-5,1,-56,150,-206,87,-4,5,-6,54,-7,73,-12,136],[187,-5,6,-64,149,-205,88,-2,6,-6,55,-6,71,-14,136],[188,-5,5,-64,149,-204,97,-7,55,-6,69,-16,135],[189,-5,5,-64,148,-204,97,-7,57,-4,69,-2,1,-3,1,-9,135],[190,-2,7,-64,150,-202,97,-7,38,-2,17,-4,69,-2,1,-1,4,-8,135],[200,-64,151,-199,99,-7,37,-2,18,-5,50,-3,14,-2,5,-8,136],[201,-64,151,-198,99,-6,58,-7,48,-3,14,-2,5,-5,2,-1,136],[201,-65,151,-196,100,-6,59,-7,47,-4,13,-2,5,-6,138],[201,-66,151,-42,8,-145,100,-5,61,-7,45,-5,21,-5,138],[201,-77,142,-37,12,-144,101,-2,63,-8,43,-8,20,-4,138],[201,-78,142,-33,15,-143,151,-2,14,-9,41,-11,20,-2,138],[201,-80,141,-30,18,-142,151,-3,13,-10,39,-14,158],[201,-82,140,-16,2,-10,19,-141,152,-8,9,-10,39,-13,158],[201,-83,140,-10,10,-4,23,-140,152,-9,8,-10,36,-14,160],[201,-84,141,-5,40,-139,154,-9,7,-11,33,-15,161],[201,-85,142,-2,42,-5,5,-127,156,-9,6,-11,33,-16,24,-1,135],[201,-86,195,-127,157,-8,7,-9,15,-1,17,-14,27,-1,135],[201,-86,194,-1,1,-125,159,-8,6,-9,15,-2,15,-15,163],[201,-86,194,-1,3,-122,162,-8,5,-9,31,-15,24,-1,138],[201,-86,193,-2,3,-121,163,-9,4,-9,30,-16,163],[200,-87,198,-121,164,-9,4,-8,26,-20,163],[199,-89,197,-120,160,-2,4,-9,3,-8,24,-22,163],[197,-91,197,-119,162,-1,4,-9,5,-7,23,-23,33,-2,127],[197,-92,196,-118,168,-12,3,-6,23,-23,32,-3,127],[197,-93,195,-116,172,-12,2,-6,16,-2,4,-23,31,-3,128],[196,-95,193,-116,174,-11,3,-5,16,-5,1,-24,21,-1,8,-2,129],[196,-95,193,-114,171,-2,4,-12,2,-4,15,-32,19,-2,7,-5,127],[195,-96,192,-114,173,-2,3,-14,3,-3,13,-33,5,-3,9,-3,7,-5,127],[192,-99,193,-113,173,-3,2,-15,2,-3,13,-33,4,-15,8,-4,128],[192,-99,192,-112,176,-1,4,-15,17,-29,7,-15,9,-5,127],[192,-100,192,-111,181,-15,17,-29,6,-2,2,-1,6,-4,10,-5,127],[155,-1,36,-100,191,-78,2,-31,183,-15,17,-27,7,-2,23,-3,129],[154,-2,1,-1,33,-104,188,-75,6,-29,185,-14,2,-1,14,-27,7,-2,24,-2,7,-3,119],[154,-5,32,-105,187,-75,6,-28,181,-2,3,-13,2,-2,14,-28,6,-2,22,-4,7,-3,2,-4,113],[155,-4,2,-2,28,-109,182,-75,7,-27,188,-12,18,-28,6,-2,7,-4,11,-4,11,-8,4,-2,104],[155,-2,4,-1,27,-114,179,-75,7,-27,183,-2,4,-12,17,-27,6,-4,3,-6,23,-13,4,-2,103],[189,-116,177,-75,6,-27,184,-2,4,-14,15,-26,7,-5,1,-8,23,-11,6,-2,102],[189,-119,175,-74,6,-26,186,-2,4,-13,3,-2,12,-23,7,-15,12,-3,9,-10,11,-2,97],[189,-119,175,-74,5,-27,186,-2,4,-13,2,-3,12,-22,8,-10,4,-1,2,-7,3,-3,5,-3,4,-8,4,-4,1,-5,95],[190,-119,174,-74,3,-28,193,-18,13,-21,8,-9,8,-3,1,-2,12,-2,5,-8,9,-7,23,-4,66],[189,-120,3,-1,171,-75,3,-25,194,-19,12,-21,8,-9,34,-7,6,-13,20,-3,9,-1,57],[190,-124,171,-101,192,-1,3,-19,3,-2,6,-21,7,-11,35,-6,5,-16,29,-2,56],[191,-127,2,-3,162,-100,194,-1,3,-18,2,-3,6,-21,7,-6,1,-5,18,-6,7,-9,4,-19,85],[192,-133,161,-98,195,-2,2,-16,1,-2,1,-3,8,-1,1,-16,8,-5,2,-5,12,-3,2,-10,5,-9,2,-22,83],[191,-135,161,-97,196,-1,3,-15,18,-4,2,-9,8,-6,1,-5,11,-5,1,-10,6,-36,79],[190,-138,160,-95,202,-13,28,-6,8,-6,1,-5,12,-4,1,-3,5,-3,5,-37,78],[189,-140,160,-94,203,-13,27,-4,1,-1,10,-4,2,-5,25,-1,6,-3,1,-35,25,-2,49],[189,-141,160,-93,203,-12,28,-2,14,-4,3,-6,36,-35,22,-4,48],[188,-143,159,-92,205,-11,44,-4,3,-5,38,-35,19,-6,48],[188,-144,159,-91,206,-10,44,-4,2,-7,41,-33,17,-5,49],[189,-145,158,-89,1,-1,207,-8,44,-3,6,-3,44,-30,17,-4,51],[189,-149,154,-89,1,-1,208,-7,43,-4,4,-5,46,-28,17,-3,52],[189,-150,154,-87,2,-1,209,-6,43,-4,4,-5,36,-2,10,-27,5,-1,1,-12,8,-2,42],[189,-150,154,-87,212,-6,44,-2,8,-1,37,-2,10,-29,3,-1,1,-10,10,-2,42],[189,-150,154,-89,215,-6,86,-3,11,-31,3,-8,11,-3,41],[190,-150,153,-89,215,-9,83,-3,11,-31,5,-4,14,-3,40],[191,-149,153,-88,215,-11,6,-2,74,-3,11,-32,23,-2,40],[193,-147,154,-88,213,-16,1,-6,5,-1,65,-2,13,-28,1,-1,24,-2,2,-2,36],[193,-147,155,-87,217,-25,2,-1,54,-1,22,-27,28,-1,2,-2,36],[194,-147,154,-87,217,-21,1,-1,58,-2,22,-28,31,-2,35],[194,-146,155,-86,220,-20,2,-1,39,-2,14,-3,20,-31,35,-1,31],[195,-145,155,-87,221,-22,37,-3,9,-1,4,-2,20,-21,2,-9,30,-1,4,-3,29],[196,-144,156,-86,229,-17,7,-2,15,-1,4,-2,41,-21,6,-8,28,-3,3,-3,28],[197,-143,156,-85,234,-14,1,-3,1,-6,3,-4,1,-1,2,-9,1,-1,3,-2,33,-5,3,-12,8,-7,28,-3,5,-2,1,-2,24],[197,-143,156,-85,242,-2,1,-14,2,-10,1,-2,4,-8,42,-11,8,-7,29,-3,4,-2,1,-2,24],[-1,196,-142,157,-86,247,-10,3,-2,1,-4,9,-6,46,-9,10,-7,39,-2,23],[198,-141,156,-87,251,-1,23,-5,49,-7,11,-9,11,-1,21,-1,3,-2,23],[198,-141,157,-86,257,-4,12,-5,70,-8,2,-3,28,-3,2,-1,23],[199,-139,158,-87,256,-6,9,-5,72,-9,1,-2,28,-4,25],[199,-138,159,-87,258,-4,9,-4,74,-8,33,-2,25],[200,-136,161,-87,258,-3,8,-4,77,-8,34,-1,23],[200,-136,161,-88,354,-3,34,-3,21],[201,-133,163,-88,329,-1,24,-3,35,-2,21],[201,-133,163,-88,328,-3,84],[201,-132,164,-88,290,-1,1,-2,1,-3,30,-3,84],[203,-129,165,-88,8,-1,280,-5,2,-4,28,-3,84],[203,-129,165,-88,8,-1,280,-4,4,-5,5,-1,19,-4,84],[204,-127,166,-88,27,-1,264,-1,4,-8,1,-2,1,-2,16,-5,83],[205,-126,166,-88,26,-3,262,-20,15,-6,83],[205,-125,166,-89,26,-3,261,-21,15,-6,83],[206,-123,166,-90,26,-4,259,-21,16,-7,82],[206,-122,166,-90,27,-4,258,-22,16,-7,82],[206,-122,165,-92,24,-6,258,-20,17,-8,82],[206,-122,165,-92,23,-7,257,-21,1,-1,15,-7,83],[207,-121,165,-92,23,-7,247,-3,7,-23,15,-7,83],[208,-120,165,-92,22,-8,245,-6,4,-22,1,-2,15,-8,1,-1,80],[209,-119,165,-92,22,-8,243,-8,4,-21,18,-11,80],[210,-118,165,-92,21,-9,242,-10,4,-20,18,-12,69,-1,9],[211,-17,1,-99,164,-93,20,-11,240,-35,18,-13,68,-2,8],[213,-16,1,-98,164,-93,19,-12,238,-38,17,-13,68,-2,8],[215,-113,164,-92,18,-14,238,-39,16,-13,68,-2,8],[217,-111,163,-92,17,-16,237,-42,13,-14,69,-1,8],[219,-109,163,-92,15,-17,239,-42,12,-14,69,-1,8],[221,-107,163,-91,14,-18,237,-46,11,-14,69,-2,7],[223,-105,163,-90,15,-18,234,-1,1,-48,3,-2,4,-15,70,-1,7],[224,-104,163,-89,15,-19,233,-3,1,-49,6,-16,78],[225,-102,164,-88,16,-18,233,-55,5,-17,77],[226,-101,163,-86,18,-18,233,-57,3,-18,77],[227,-99,164,-84,20,-19,232,-78,70,-2,5],[227,-99,165,-82,21,-18,233,-78,77],[228,-99,164,-81,22,-18,233,-77,78],[228,-98,165,-80,23,-18,232,-79,77],[228,-98,166,-78,24,-17,232,-80,71,-2,4],[229,-96,168,-76,25,-17,231,-81,71,-2,4],[229,-96,168,-75,27,-16,231,-82,76],[229,-95,170,-73,28,-15,230,-86,74],[229,-94,171,-72,29,-15,228,-88,74],[229,-94,171,-71,30,-15,27,-1,195,-95,72],[229,-94,172,-70,29,-15,27,-2,192,-99,48,-2,21],[229,-94,172,-70,29,-15,28,-1,191,-100,48,-3,20],[229,-94,173,-69,28,-15,22,-1,193,-105,49,-3,5,-1,13],[229,-92,175,-70,27,-15,21,-2,192,-107,48,-4,4,-1,13],[229,-91,177,-69,26,-16,22,-1,190,-109,49,-3,6,-1,11],[229,-90,178,-69,25,-16,212,-111,50,-3,5,-1,11],[229,-83,185,-69,25,-16,209,-1,1,-112,51,-3,16],[229,-81,188,-68,24,-17,208,-116,51,-3,15],[229,-78,2,-1,189,-68,23,-16,209,-118,50,-2,15],[229,-76,194,-68,23,-16,208,-119,67],[229,-75,195,-68,24,-15,208,-119,67],[230,-73,196,-67,25,-14,209,-118,68],[230,-72,197,-67,25,-14,209,-119,67],[230,-71,198,-67,25,-13,209,-120,67],[229,-71,199,-67,25,-13,209,-121,66],[230,-70,199,-67,25,-13,208,-123,65],[230,-71,198,-66,27,-11,209,-123,65],[230,-70,199,-65,28,-11,209,-124,64],[64,-1,165,-71,199,-61,31,-10,210,-124,1,-2,61],[63,-3,164,-71,199,-59,34,-7,213,-125,62],[230,-71,199,-58,37,-3,213,-1,1,-124,63],[230,-71,199,-57,254,-1,1,-123,64],[229,-72,199,-57,252,-127,64],[230,-71,199,-57,253,-1,1,-124,64],[229,-71,201,-56,253,-126,64],[229,-70,202,-56,254,-124,65],[230,-68,203,-56,254,-125,64],[230,-68,203,-55,255,-124,65],[230,-67,204,-55,255,-124,65],[230,-67,205,-54,255,-124,65],[229,-68,206,-52,256,-124,65],[230,-66,208,-51,257,-123,65],[230,-66,209,-49,258,-123,65],[230,-65,210,-48,259,-122,66],[231,-63,211,-47,260,-121,67],[231,-62,213,-45,261,-120,68],[232,-60,214,-45,261,-120,68],[232,-59,215,-44,261,-120,69],[232,-59,216,-42,262,-120,69],[232,-59,216,-42,262,-119,70],[232,-58,217,-41,263,-119,70],[232,-57,219,-39,264,-118,71],[231,-58,220,-38,265,-116,72],[232,-42,1,-13,221,-36,267,-48,1,-67,72],[232,-44,2,-9,222,-35,268,-41,9,-65,73],[231,-47,231,-34,268,-39,15,-61,74],[231,-48,230,-33,269,-32,24,-59,74],[231,-48,229,-34,268,-31,27,-56,76],[231,-48,229,-32,270,-29,28,-56,77],[231,-50,228,-30,271,-27,31,-53,79],[230,-51,228,-28,272,-27,33,-8,1,-43,79],[230,-51,228,-27,271,-28,34,-7,1,-43,80],[229,-52,228,-23,275,-18,3,-3,1,-1,36,-5,2,-43,81],[229,-51,230,-11,286,-14,48,-4,3,-42,82],[229,-50,233,-4,292,-11,49,-3,4,-2,1,-39,83],[230,-49,234,-2,294,-8,52,-2,3,-3,1,-38,68,-1,15],[230,-48,532,-6,56,-4,1,-39,68,-3,13],[231,-45,600,-39,68,-4,13],[232,-39,601,-2,2,-38,69,-4,13],[232,-35,603,-6,3,-34,71,-3,13],[232,-35,604,-1,7,-33,72,-3,13],[232,-35,612,-32,73,-3,13],[232,-34,613,-32,73,-2,1,-2,11],[232,-35,611,-32,74,-5,11],[232,-35,611,-32,74,-4,12],[232,-27,2,-5,612,-31,74,-5,5,-1,6],[232,-27,619,-30,75,-6,3,-3,5],[233,-2,1,-24,619,-22,81,-12,6],[232,-3,1,-24,2,-2,617,-19,81,-12,7],[232,-3,2,-27,620,-5,3,-6,83,-12,7],[233,-2,2,-24,1,-3,621,-1,6,-3,84,-11,9],[233,-2,2,-27,630,-1,82,-13,10],[233,-2,2,-25,715,-10,13],[237,-24,625,-1,90,-9,14],[237,-24,624,-2,10,-2,79,-8,14],[237,-24,624,-1,11,-2,80,-6,15],[234,-27,636,-2,79,-6,16],[234,-27,625,-1,82,-2,6,-5,18],[235,-26,625,-4,3,-4,71,-3,5,-5,19],[234,-23,628,-12,70,-13,20],[234,-23,628,-11,70,-7,2,-3,22],[234,-22,629,-11,68,-9,27],[234,-23,628,-10,68,-9,28],[233,-25,627,-9,68,-9,29],[235,-26,623,-9,68,-8,31],[237,-26,621,-8,68,-8,32],[237,-26,622,-7,65,-10,33],[235,-28,622,-5,65,-10,35],[235,-28,622,-3,65,-12,35],[235,-27,689,-14,35],[235,-25,391,-1,297,-11,40],[236,-24,390,-6,291,-11,42],[236,-24,390,-6,289,-12,43],[237,-23,390,-1,1,-2,289,-13,44],[238,-22,682,-13,45],[238,-20,683,-13,46],[238,-1,1,-17,682,-14,47],[240,-17,682,-12,49],[240,-18,24,-1,1,-1,1,-2,652,-9,51],[240,-2,2,-15,23,-8,653,-5,52],[243,-17,21,-9,650,-2,58],[244,-17,20,-2,2,-2,652,-3,58],[245,-14,741],[246,-9,1,-6,738],[247,-8,1,-6,738],[246,-9,1,-2,1,-4,737],[248,-17,735],[249,-18,81,-4,648],[252,-18,4,-2,74,-4,646],[255,-18,1,-1,77,-2,646],[256,-14,730],[260,-5,1,-3,731],[1000],[1000],[925,-2,73],[925,-1,74],[1000],[1000],[1000],[1000],[1000],[1000],[1000],[1000],[1000],[1000],[1000],[1000],[1000],[306,-2,692],[1000],[299,-2,699],[298,-3,699],[294,-3,703],[1000],[302,-8,690],[299,-10,691],[291,-1,3,-10,695],[289,-4,2,-11,694],[288,-10,1,-2,4,-1,694],[288,-9,703],[289,-7,371,-1,332],[288,-7,370,-3,332],[286,-13,263,-9,85,-2,7,-10,12,-7,35,-1,1,-4,265],[286,-13,260,-15,83,-1,2,-2,2,-14,8,-9,22,-2,7,-17,257],[280,-3,2,-7,263,-1,3,-15,58,-2,5,-1,2,-39,3,-12,15,-9,5,-24,1,-1,249],[280,-10,1,-1,263,-3,1,-16,54,-2,1,-63,2,-3,7,-48,245],[279,-11,260,-3,2,-26,4,-2,40,-128,245],[279,-3,1,-6,257,-49,2,-2,22,-137,242],[285,-7,250,-57,18,-141,242],[286,-6,2,-3,242,-60,16,-151,3,-3,228],[275,-5,6,-10,225,-4,11,-62,16,-158,228],[275,-6,6,-11,1,-1,221,-5,9,-62,14,-167,222],[273,-9,1,-18,220,-5,9,-60,13,-172,220],[267,-3,7,-6,2,-16,184,-3,32,-12,1,-62,7,-178,220],[267,-3,7,-25,171,-1,5,-9,3,-2,5,-1,3,-1,10,-81,7,-179,1,-2,217],[279,-24,1,-2,157,-14,1,-15,4,-3,1,-3,6,-84,5,-192,209],[280,-7,1,-19,127,-6,17,-136,4,-195,208],[274,-14,1,-17,121,-5,2,-10,1,-3,1,-2,3,-138,4,-197,1,-1,205],[232,-1,1,-1,36,-18,1,-16,118,-168,2,-201,205],[230,-9,32,-7,2,-9,2,-16,119,-368,206],[233,-7,23,-5,10,-11,3,-16,116,-368,208],[230,-2,1,-3,9,-2,1,-2,15,-4,4,-1,6,-5,6,-18,111,-370,210],[201,-2,27,-23,8,-8,3,-7,5,-27,104,-373,212],[201,-3,27,-26,4,-10,2,-37,104,-369,3,-1,213],[203,-10,2,-1,1,-2,13,-78,104,-364,222],[197,-1,7,-2,1,-4,1,-3,1,-3,1,-3,10,-77,101,-3,1,-359,225],[192,-8,1,-23,11,-75,101,-364,225],[189,-38,3,-5,2,-69,1,-2,100,-359,232],[185,-121,99,-362,233],[182,-122,89,-373,234],[179,-120,87,-379,235],[179,-97,2,-15,90,-381,236],[172,-2,5,-3,1,-96,101,-382,238],[170,-10,1,-105,89,-387,4,-6,228],[171,-117,55,-10,20,-390,3,-2,1,-2,229],[172,-115,54,-14,17,-392,236],[177,-103,17,-6,37,-15,16,-393,236],[168,-4,6,-94,22,-7,40,-16,16,-382,245],[168,-8,6,-103,8,-6,42,-17,23,-369,250],[171,-5,10,-99,10,-2,42,-19,29,-360,253],[187,-101,47,-22,24,-365,254],[188,-106,40,-11,3,-1,25,-370,256],[181,-131,51,-380,257],[184,-129,33,-6,9,-382,257],[187,-131,18,-19,5,-385,255],[188,-133,11,-415,253],[184,-567,249],[171,-1,11,-575,242],[170,-6,10,-574,240],[170,-15,5,-573,237]    ];
        l("decompressing land-sea map");
        for(a.line=0; a.line < mask.length; a.line++){ // changes "3,  -2" into "0,0,0,  1,1"
            nav.mapOutline.push([]); // new a.line
            for(a.i=0; a.i < mask[a.line].length; a.i++){
                if(mask[a.line][a.i] >0)// default: 0,0,0 etc.
                    for(a.j=0; a.j < mask[a.line][a.i]; a.j++) nav.mapOutline[a.line].push(0);
                else for(a.k=0; a.k > mask[a.line][a.i]; a.k--) nav.mapOutline[a.line].push(1);
            };
        }
    }
    // position on map
    a.sceneMapPixel.x = sceneX/nav.scenesPerPixel;
    a.sceneMapPixel.y = sceneY/nav.scenesPerPixel;
    // position on scaled down land/sea array
    a.landArrayPosition.x = Math.round(a.sceneMapPixel.x / 5); // map is 5000px wide, outline is 1000 px wide
    a.landArrayPosition.y = Math.round(a.sceneMapPixel.y / 5);
    l("XXX scene=(" +sceneX+ "," +sceneY+ "), mapOutline position=(" +a.landArrayPosition.x+ "," +a.landArrayPosition.y+ ")");
    // result from array (0 or 1)
    if(nav.mapOutline.length ==0) decompress();
    console.log(nav.mapOutline);
    return nav.mapOutline[a.landArrayPosition.y][a.landArrayPosition.x]; // 1 => land, 0=> sea
}

loadJavascript("c/4-commands_0.js");
