genius made EASY				// tired? mental block? no problem!
		1. Tidy some code. 	// Whatever is EASY. Gets code in head
		2. Find EASIEST thing on this list. // even if it is NOT what you left half finished
		3. Repeat! 				// chip away one grain at a time. Surprise! it gets done!
		4. Remember: 50 lines a day is good for a professional. 20  is good for an amateur.
______________________________________________________________________________
NO MORE CORE CODE!!!!!!!
		change the story to use EXISTING code, or EASY changes
______________________________________________________________________________


TO DO

									using "whatChange" where possible
_____________________________________________________

Zoom: log the map size: use THAT number for the zoom

Zoom in, and then slowly zoom out: noting when each zoom conflict arises


Fill gaps: e.g. Siberia.
Khakassia - 
links with first Americans

https://www.ancient-origins.net/human-origins-science/inexplicable-origins-ket-people-siberia-009908

"According to one Ket legend, the Kets were aliens who came from the stars." - no obviousl link with other Russians

https://www.ancient-origins.net/news-history-archaeology/found-grave-siberian-noblewoman-4500-years-old-links-native-americans-020955

Denisovans aform SIberia 50k BC, share DNA with Australians




click map: "need ship" comment
		check if notes.includes("island") 
								




story
		needs tree in godLocation
			click tree: win

		storyStarter give money for ticket to tree

		story event: arrive at [location] 
				arrive there, talk about why it is important
						+ say used up travel money to get there

		story event
				clicking tree triggers cutscene
						add trap situation: 
							only one exit to special tree
			
draw Cherubim monster (with flaming sword)
		like monster code: see him, leave again
		
add trade situation
		what does Cherubim want?


_____________________________________________________
_____________________________________________________
function testCoasts(){
	test.skipRendering =1;
	l("TESTING: nav.sceneY =" +nav.sceneY+ " (" + Math.floor(nav.sceneY/1000)+ "px)");
for(var i=0; i<=100000, i++){
	nav.sceneX = nav.sceneX +1;
	fillScene();
	if(nav.sceneType ==" coast ") l("FOUND COAST at x=" +nav.sceneX+ " (" + Math.floor(nav.sceneX/1000)+ "px), facing " +nav.facing);
	}
	l("TESTING ENDS: nav.sceneX =" +nav.sceneX+ " (" + Math.floor(nav.sceneX/1000)+ "px)");
}

	
check San Francisco coast is still found in real life (tedious)

manually check longer distance to coast (very tedious)


tryForLand#441#766 had no background

_____________________________________________________
fillScene: name
_____________________________________________________

	detect if nav.mapLocation ==1 // island harbour
		show the island name

	nav.lastMapLocation = last NAMED map location (usually from clicking on a map
		if x%1000 and y%1000 ==0, assume you have just clicked there; give it the "somewhere else" name
			if no other location name, give distance relative to this


		db.mapLocations[0].nameMaybe= dbNext(db.synonyms.somewhere); // dbNext cycles numbers
		if(sea)db.mapLocations[0].nameMaybe += " at sea";


	choosing island names:
	then add as [123,456,islandName] // to save calling it again (and avoid any risk of changing!)




_____________________________________________________
waiting...
_____________________________________________________
create list of slow stuff to do in gaps- e.g. "uncompress" for map
		add it to list of "do when idle"





______________________________________________________________________
checkEventsForWalkIn()		
______________________________________________________________________

story clues:  // if story = "Treasure Island"
						if have treasureMap
							if have treasure: say "need to get off this island!
							else - "need to get treasure!"
						else
							"[Billy Bones] said to watch out for dangerous men - why? What are they after?
					

if: badGuy in scene
					 if goodGuy has valuableItem // includes item CONTAINING valuableItem, e.g. sea chest with treasureMap

								RANDOM: good or bad person gets weapon or ally to change the odds
										e.g. another badGuy enters. Or Ben Gunn enters.

									-> calculate badGuysStronger()
										badGuys STRONGER?
										say "maybe I should leave!" // could have left before this.
											add CONFLICT dialogue  // during this he has a second or two to leave
											they get valuableItem, 
												it is marked as "stolen" // so you can steal it back 
										else 
					if you are HIDDEN // e.g. in apple barrel
								add PLAN dialogue // e.g. "first chance we get"
					else
							add PASSIVE THREAT dialogue. 
											// e.g. give Billy Bones the black spot. He dies from fear.
											// or "I have heard that bad things happen to..."
										// NOTE: they are not VISIBLY evil. You have to work that out for yourself!
												then you get weapons, or avoid their presence


______________________________________________________________________
checkMouseClick()
______________________________________________________________________
person				// sailor?		// sailors not set? Randomly assign people as sailors or not
							// need to "get to" and across water
								// not got enough sailors (check friend list: is that person a sailor?)
									// not got money? 		"I could be a sailor but I don't think you can afford me"
										// them good guy? If you have treasure map: say "not interested" // threatened by bad guys
											else say yes. Add "friend:name"
						// rich?
							// you need money? 
								// you got treasure map? Add them to "temporary friends" - reset once you get the treasure.
ship					//  hiredBy: rich friends? Or you? Say so.
							else got money? 
								hire ship/ YES/NO
									ship "hiredBy" rich friend
							else: persuade rich friends to hire it? YES/NO
									YES: got treasureMap? yes.
									ship "hiredBy" you
							say "I can now go to sea!"
						// else: say so. // or have friend with money
seaChest				// if "containsTreasureMap"
							// say "it contains a treasure map!"
								// add to inventory.
								// remove "containsTreasureMap"
treasureMap		// see "createTreasureMap()" for text
							if treasureMap NOT flagged as "foundBy: X"
									NEED: treasure
									SAY: "I had better do what it says!"
treasureChest		// if "hasTreasure"
							say: yay! got treasure!
								add to inventory
								remove "hasTreasure" from treasureChest
								set treasureMap as "treasureFound"
									// normal badGuy behaviour will cause them to steal it IF they are more powerful
							else: 
								if "foundBy X" (etc: added RANDOMLY at start. NOT you)
										if X == you, say "we already found the treasure"
										else say "somebody must have found it" // e.g. might be Ben Gunn
weapon				// pick up, say "this may come in useful"
								// result: "badGuysStronger()" calculation now changes. Only ever used as a threat in my games
alcohol (etc.)		if badGuy in room, say "I'll give [badGuy] a drink"
							badGuy marked as "drunk at time X" // record NUMBER OF SCENE CLICKS not real time
rope (or net, etc.)	// typically used when in inventory
			 		 	if badGuy in room 	
							AND badGuy drunk (recently)	
								choice: "tie up badGuy YES / NO"
									say "did it from behind, he does  not know it was me" - so can do this multiple times
							badGuy marked as "tied up at time X" 
								// when entered, check if he is tied up: and replace with "tied up" image 
								// after Z time passes, he is untied (either himself or by a friend)
								
______________________________________________________________________
OLD FUNCTIONS
______________________________________________________________________
goToScene()			// water? 
							ship in scene?
								"hiredBy" you or rich friend? 
							else: say "cannot go there without a ship."
							// TO sea FROM sea? 
										if no crew, sometimes RANDOM direction
							// if: bad people on island (and none on ship)
									// if: have treasure, say 
											"marooned them!"  // good guys follow you
											END OF STORY: flag storyName "treasure Island" as done
												remove story related "needs" e.g. watch out for dangerous men"
													Cutscene: back home, many weeks later. Shared treasure with good causes.
									// else: say "I can hide the ship further up the coast, so the bad guys don't find it
												(e.g. in Treasure Island)								
______________________________________________________________________
NEW FUNCTIONS
______________________________________________________________________
areBadGuysStronger(){} 
						// IF bad guys in scene // KEEP IT SIMPLE: only count current scene
						// check numbers (do not include "tied up")
						// check power of each (e.g. physical strength, guns, chained up, etc.)
doBadGuysPretend(){} 	
						// if bad guy is in scene: check this first
						// causes bad guys to STOP pretending once you get the treasure
						// test: badGuysStronger()  x  wealthDifference
								// MUCH stronger: will take everything
								// SAME or slightly stronger: only if BIG reward
createTreasureMap(){}
						// create text: "start at A, north X, west Y, etc."; 
						// add objects that include directions 		// ("add" first checks that it does not already exist)
								// e.g. skeleton points finger, object has missing section of map
						// add "valuableItem" sea chest or other container
lockedUp()
						// take to room (some people have special rooms: e.g. king has castle, police have cell)
						// set doors as locked
						// add hidden objects to get out // e.g. touch X, reveals Y, use with Z
									// click on door: OPTION: bargain your way out? Lose all inventory, and most money?
											// like REAL jail: not supposed to be pleasant!!
makeThreat()
				 		// to replace fighting: we are far too intellectual for that. :)
						"If you don't... then..."
						"It would be a shame if you..."
						"If you are here when..."
						The black spot, five orange pips, etc. Draw lots of tiny objects or paper with markings on it.
findMapOrCode(container) 
						// container = bottom of box, sewed into sleeve, etc.
						treasure map, copper scroll, brass rubbing, carving on strips of bark. // so many varieties, so it's best as a function
						secret code written on - what?
						optional: work out the code
addHidingPlace() 	// NOT apple barrel: no climbing or bending. Keep It Simple!
								wardrobe, curtains, tapestry, charts, cupboard, etc.
						// on click code: HIDE INSIDE? YES/NO
							//		then walk behind or inside.



______________________________________________________________________
TEST: TREASURE ISLAND
______________________________________________________________________
An old sailor named Billy Bones comes to lodge in the rural Admiral Benbow Inn on the West English coast. He tells the innkeeper's son, Jim Hawkins, to keep a lookout for "a one-legged seafaring man". A former shipmate, Black Dog, confronts Bones and engages in a violent fight with him. After Black Dog is run off, a blind beggar named Pew visits to give Bones "the black spot" as a summons to share a map leading to buried treasure. Shortly thereafter, Bones suffers a stroke and dies. Pew and his accomplices attack the inn, but Jim and his mother save themselves while taking Bones's sea chest. Inside the chest, they find a map of an island on which the infamous pirate Captain Flint hid his treasure. Jim shows the map to the local physician Dr. Livesey and the district squire John Trelawney, and they decide to make an expedition to the island, with Jim serving as a cabin boy. They set sail on Trelawney's schooner, the Hispaniola, under Captain Smollett. Much of the crew, as it is later revealed, are pirates who served under Captain Flint, most notable of which is the ship's one-legged chef "Long John" Silver. Jim, sitting in an apple casket, overhears the conspirators' plan to mutiny after the salvage of the treasure and to assassinate the skippers.

Arriving off the coast of the island, Jim joins the shore party and begins to explore the island. He meets a marooned pirate named Ben Gunn, who was also a former member of Flint's crew. The situation comes to a head after the mutineers arm themselves, and Smollett's men take refuge in an abandoned stockade. During an attack on the stockade, Jim finds his way there and rejoins the crew. Jim manages to make his way to the Hispaniola and cuts the ship's anchorage, allowing the ship to drift along the ebb tide. Jim boards the Hispaniola and encounters Israel Hands, who was severely injured in a dispute with one of his companions. Hands helps Jim beach the schooner in the northern bay, but then attempts to kill Jim with a knife. Jim escapes, climbs into the shrouds of the ship and shoots his pursuer.

Jim goes back ashore and returns to the stockade, where he is horrified to find only Silver and the pirates. Silver prevents Jim's immediate death and tells Jim that when everyone found the ship was gone, the captain's party agreed to a treaty whereby they gave up the stockade and the map. In the morning, the doctor arrives to treat the wounded and sick pirates and tells Silver to look out for trouble when they find the site of the treasure. After he leaves, Silver and the others set out with the map, taking Jim along as hostage. They encounter a skeleton, arms oriented toward the treasure, which unnerves the party. Eventually, they find the treasure cache empty. The pirates nearly charge at Silver and Jim, but shots are fired by the ship's command along with Gunn, from ambush. Livesey explains that Gunn had already found the treasure and taken it to his cave. The expedition members load much of the treasure onto the ship and sail away. At their first port in Spanish America, where they will sign on more crew, Silver steals a bag of money and escapes. The rest sail back to Bristol and divide up the treasure. Jim says there is more left on the island, but he for one will not undertake another voyage to recover it.






______________________________________________________________________
TEST: KING SOLOMON'S MINES
______________________________________________________________________

Allan Quatermain, an adventurer and white hunter based in Durban, in what is now South Africa, is approached by aristocrat Sir Henry Curtis and his friend Captain Good, seeking his help finding Sir Henry's brother, who was last seen travelling north into the unexplored interior on a quest for the fabled King Solomon's Mines. Quatermain has a mysterious map purporting to lead to the mines, but had never taken it seriously. However, he agrees to lead an expedition in return for a share of the treasure, or a stipend for his son if he is killed along the way. He has little hope they will return alive, but reasons that he has already outlived most people in his profession, so dying in this manner at least ensures that his son will be provided for. They also take along a mysterious native, Umbopa, who seems more regal, handsome and well-spoken than most porters of his class, but who is very anxious to join the party.

Travelling by oxcart, they reach the edge of a desert, but not before a hunt in which a wounded elephant claims the life of a servant. They continue on foot across the desert, almost dying of thirst before finding the oasis shown halfway across on the map. Reaching a mountain range called Suliman Berg, they climb a peak (one of "Sheba's Breasts") and enter a cave where they find the frozen corpse of José Silvestre (also spelt Silvestra), the 16th-century Portuguese explorer who drew the map in his own blood. That night, a second servant dies from the cold, so they leave his body next to Silvestra's, to "give him a companion". They cross the mountains into a raised valley, lush and green, known as Kukuanaland. The inhabitants have a well-organised army and society and speak an ancient dialect of IsiZulu. Kukuanaland's capital is Loo, the destination of a magnificent road from ancient times. The city is dominated by a central royal kraal.

They soon meet a party of Kukuana warriors who are about to kill them when Captain Good nervously fidgets with his false teeth, making the Kukuanas recoil in fear. Thereafter, to protect themselves, they style themselves "white men from the stars"sorcerer-godsand are required to give regular proof of their divinity, considerably straining both their nerves and their ingenuity.

They are brought before King Twala, who rules over his people with ruthless violence. He came to power years before when he murdered his brother, the previous king, and drove his brother's wife and infant son, Ignosi, out into the desert to die. Twala's rule is unchallenged. An evil, impossibly ancient hag named Gagool is his chief advisor. She roots out any potential opposition by ordering regular witch hunts and murdering without trial all those identified as traitors. When she singles out Umbopa for this fate, it takes all Quatermain's skill to save his life.

Gagool, it appears, has already sensed what Umbopa soon after reveals: he is Ignosi, the rightful king of the Kukuanas. A rebellion breaks out, the Englishmen gaining support for Ignosi by taking advantage of their foreknowledge of a lunar eclipse to claim that they will black out the moon as proof of Ignosi's claim. (In early editions, this was a solar eclipse; Haggard changed it after realising that his description of a solar eclipse was not realistic[13]) The Englishmen join Ignosi's army in a furious battle. Although outnumbered, the rebels overthrow Twala, and Sir Henry lops off his head in a duel.

The Englishmen also capture Gagool, who reluctantly leads them to King Solomon's Mines. She shows them a treasure room inside a mountain, carved deep within the living rock and full of gold, diamonds, and ivory. She then treacherously sneaks out while they are admiring the hoard and triggers a secret mechanism that closes the mine's vast stone door. However, a brief scuffle with a beautiful Kukuana woman named Foulatawho had become attached to Good after nursing him through his injuries sustained in the battlecauses her to be crushed under the stone door, though not before fatally stabbing Foulata. Their scant store of food and water rapidly dwindling, the trapped men prepare to die also. After a few despairing days sealed in the dark chamber, they find an escape route, bringing with them a few pocketfuls of diamonds from the immense trove, enough to make them rich.

The Englishmen bid farewell to a sorrowful Ignosi and return to the desert, assuring him that they value his friendship but must return to be with their own people, Ignosi in return promising them that they will be venerated and honoured among his people forever. Taking a different route, they find Sir Henry's brother stranded in an oasis by a broken leg, unable to go forward or back. They return to Durban and eventually to England, wealthy enough to live comfortable lives.


______________________________________________________________________





_____________________________________________________
SAY: shortcuts
_____________________________________________________
 // "£Have you tried exercise?#For days. And it doesn't work."

	str = str.replace(/£/g, ">£"); // add line breaks for you...
	str = str.replace(/#/g, ">#"); // ...and them...
	str = str.replace(/£/g, "	"); // no need for "£" now: just assumed
	var stringArray = str.split(">"); // now an array
	// now call "say" for different people

_____________________________________________________
climbDownSay: use new "say" code instead
_____________________________________________________





_____________________________________________________
TINTING (Mars - red deserts etc)
_____________________________________________________
img style:
filter:invert(100%) brightness(30%) contrast(30%) sepia(100%) saturate(18) hue-rotate(90deg);
	tint(id,tint)// id can be "all" for whole scene

		

_____________________________________________________
DARKNESS
_____________________________________________________
var torchTimer =0, var maxTorchTime // for user: 1 = 1 light scene. Can increase if buy better torch. Default = matches, 5 scenes
if(cave etc)
if(torchTimer == (Math.round(maxTorchTime/2)) warn person.
darkness: see tinting
	You soon learn to have enough light!



_____________________________________________________
QUICK CHANGES
_____________________________________________________
"friendliness":5		      people(and animals): // e.g. unfriendly baker needs to be asked 3 times. Enemies will not lend things.

needs(what,2)          "2" can also be XYZ location or map name. 

active.lighting: default = "light"  		//  some rooms have no windows
							// room with no windows? Tint dark. // or caves

_____________________________________________________
OWNERS
_____________________________________________________
active.owners:     check when adding default surnames. 
						Can cover RANGE of rooms.
						if HERO surname is attached to a home: he owns it! Can take anything!
						if FRIEND surname is attached, can borrow stuff, can find OWN money forgotten there




_____________________________________________________
GOTOSCENE: CAN YOU GO?
_____________________________________________________
FIRST: distance. Have money? YES/NO option: spend X money (you have) on trains and boats?
                                                Extreme distance? Function: check what it needs (space ship, etc.)
THEN: locked?
					// Or forbidden, etc? 
THEN: trust? 
					// Your reputation; owner (surname's) friendliness. Need the same "tribalMark" as owner?
Enter living room:
				check active.owners. // owner always walks in. Does not enter other rooms unless you double click things.




_____________________________________________________
USEFUL OBJECTS TO ADD
_____________________________________________________
text objects: notes: " text^bla bla " // "it says 'bla bla'" // for passing notes, lottery numbers, etc.
matches
ankh (and other object with prominent symbols: use like writing, door codes, tribalMark, etc.
small tree branch (for sweeping)
peanuts
bread (and other food?)
sparkTransmitter // pre 1900 Marconi radio telegraph sending device, use instead of TV remote
coherer // pre 1900 device for detecting radio signals
newspaper // with "text^bla bla " 
crayons
butterKnife (got?)
bentButterKnife

_____________________________________________________
SCENETYPES
_____________________________________________________
		KEEP IT SIMPLE: very few, so you can easily check them all, resuse stuff, etc.

" shop "      : use for baker, ironmonger, etc.  // simple for "includes(sceneType)"
" printer "   : use for publisher, phone company, telegraph, etc. (this is 1900, remember), etc. Useful.
" townHall ": use for police, and any place of authority or gathering.
" castle "    : use for palace, large govt building, etc. Arched doorways, as if part of same gigantic hall.
" temple "   : use for pyramid, ancient city, etc. Stone blocks, statues, arched doorways.
                               Outside: use word on DIV: sign in middle of image. // use surname each time: "Bloggs; store" etc.
                               Inside: walls with lots of window frames. // so wallObjs can still be used.
? " cliff "



_____________________________________________________
TRADING
_____________________________________________________
pick up:   owner enters
			OPTIONS: 
		     borrow-> depends on reputation
		     buy->  price. Also influenced by reputation.
		     take -> owner leaves first. // don't say "steal" - adventure gamer must LEARN it harms reputation
               remember -> store sceneXYZ and id, so if sold, "changes" says it has gone
                           use for trading or writing // i.e. anything where just knowing of it would work.
							Same code, but flagged "borrowed/owned/taken/remembered"
            	option by "drop": "sell"
					person in room? Get best price. // : fakeRandom decided how they value the item.
							// need a fakeRandom based on PERSON, not location
					Nobody? Inside? owner enters
droppedObjects 
			remember everything, in case it was essential to the game
					// big list. In case it was needed for the game.
               click any shop keeper. Notify: list of everything dropped. VERY expensive.
					// they say "take a long time" -> appears as (waiting for X) until after X rooms


______________________________________________________________________________
PIN NUMBERS
______________________________________________________________________________
easy to code, easy to use in lots of stories, adds interest:
	get number from X then type it into Y
		e.g. game high score into secret lab combination






______________________________________________________________________________
COSMETIC CHANGES
______________________________________________________________________________
	cave tables: narrower
	etc.
	object sizes 
			 manually set some to "fixedRatio", manually set sizes
	
________________________________________________________




______________________________________________________________________________
SPEED CHANGES
______________________________________________________________________________
clicking island: 
		then move that array member to position 0
			use "slice" and "shift"
			remember: ONLY Xx,Y matters. 
			The rest is looked up each time you change scenes


______________________________________________________
LATER, AFTER STORIES
______________________________________________________



_____________________________________________________
CLICK TEDAGAME ICON
_____________________________________________________
causes: 	list of stories (both finished and undfinished)
               + list of offered but rejected stories (user might change their mind)
               + BOLD: design your own story (or change this one!) - Patreon


______________________________________________________
DOWNLOAD ONE STORY AT A TIME
______________________________________________________
            	function addGame(){
            		// already in main array? return
            		// push contents of addToArray into mainArray
______________________________________________________
COMPRESS PNGs:
		pngquant (reduces to 256 colours or fewer)
		pngcrush (tries various compression methods)
check that javascript is zipped
		Dreamhost -> domains -> ticked box
______________________________________________________
SAVE GAMES
      share game state in URL:  TEDAgame.com/?variable=123&a=456&b=789
      LOCALSTORAGE:
                localStorage.setItem("variableName","Text"); // localstorage =built into browsers including android
                localStorage.getItem("variableName");
                localStorage only uses strings:
                convert arrays etc to/from strings using JSON.stringify() and JSON.parse()




___________________________________________
KNOWN GAME BUGS
____________________________________________
"reach" animation frames: not multiples of 96 pixels (or 72 or 60 for child sprites)	
			so can jiggle about. (Jiggling is not important for walking etc)

___________________________________________
KNOWN BROWSER BUGS
____________________________________________
1. sprites wobble in Firefox, but not in Chrome
	cause: browsers round floating point numbers differently. So must have integers.
	solution:
		in GIMP:	
				reposition standing frames to be multiples of 12 pixels. (only noticeable when talking)
					e.g. default standing frame is 94 pixels: make it 96.	
						this adds 8 x 2px = 16 pixels, can be absorbed by gap before first walking frame
				smaller characters are resized in the GIMP. e.g. 84 wide
					then need different sprite pixel numbers
		in Javascript:
				when scaling, get the desired scale as now.	
				THEN check how this would change the first frame: 96 goes to 48, 32, etc., 84 goes to 42, 28, etc.
				THEN change the scale accordingly.
				CHECK: can you foce the code to output actual pixels, to remove the danger of floating points?
	DO NOT rely on this bug being fixed. 
			Developers say it is a low priority bug. So even if fixed, it might reappear on another update:
					Not all variable sare tested: platform, webGL v canvas, default shader precision, etc.

2. Wobble; or show too much of next frame (if facing left)
	cause: INTERMITTENT
	solution: wait until game nearly finished.
				 Code will probably be rewritten by then anyway.

____________________________________________


	

